import streamlit as st
import pandas as pd
import numpy as np


# Configuraci칩n de la p치gina
st.set_page_config(page_icon="游늷", layout="wide")

st.title("Momento 2 - Actividad 1")

st.header("Creaci칩n de DataFrames en Pandas con Streamlit")
st.markdown(
    """
Esta actividad consiste en construir una aplicaci칩n web b치sica con Streamlit que permita visualizar distintos DataFrames creados con la biblioteca Pandas.
Se trabajan diversas fuentes de datos, como diccionarios, listas, etc; 
con el objetivo de familiarizarse con la manipulaci칩n y visualizaci칩n de datos en entornos interactivos.
"""
)

st.header("Objetivos de aprendizaje")

st.markdown(
    """
- Familiarizarse con la creaci칩n de DataFrames en Pandas y mostrarlos usando Streamlit.
"""
)

st.markdown('<h1 style="color:#0063F7;">Soluci칩n</h1>', unsafe_allow_html=True)

st.subheader("**1. Diccionario:**")

st.write(
    """Crea un diccionario en tu script con al menos cuatro claves: t칤tulo, autor, a침o de publicaci칩n y g칠nero.
    Para cada clave, asigna una lista con datos de ejemplo sobre libros (por ejemplo, 3 o 4 libros distintos)."""
)

# 1. Diccionario
biblioteca = {
    "Titulo": [
        "Orgullo y prejuicio",
        "El Se침or de los Anillos",
        "Harry Potter",
        " Bajo la misma estrella",
    ],
    "Autor": ["Jane Austen", "	J. R. R. Tolkien", "J. K. Rowling", "John Green"],
    "A침o de publicaci칩n": ["1813", "1954", "1997", "2012"],
    "Genero": [
        "Novela rom치ntica / Cl치sico",
        "Fantas칤a 칠pica",
        "Fantas칤a / Aventura",
        "	Novela juvenil / Drama rom치ntico",
    ],
}
st.subheader("DataFrame de libros")
df_bibioteca = pd.DataFrame(biblioteca)
st.dataframe(df_bibioteca)


if st.button("Ver c칩digo #1"):
    mostrar_codigo_uno = """biblioteca = {
    "Titulo": [
        "Orgullo y prejuicio",
        "El Se침or de los Anillos",
        "Harry Potter",
        " Bajo la misma estrella",
    ],
    "Autor": ["Jane Austen", "	J. R. R. Tolkien", "J. K. Rowling", "John Green"],
    "A침o de publicaci칩n": ["1813", "1954", "1997", "2012"],
    "Genero": [
        "Novela rom치ntica / Cl치sico",
        "Fantas칤a 칠pica",
        "Fantas칤a / Aventura",
        "Novela juvenil / Drama rom치ntico",
    ],
}
df_bibioteca = pd.DataFrame(biblioteca)
st.dataframe(df_bibioteca)
"""

    st.code(mostrar_codigo_uno, language="python")


# 2. Lista de diccionarios

lista_ciudades = [
    {
        "nombre": "Medell칤n",
        "Poblaci칩n": "2,500,000",
        "Pa칤s": "Colombia",
    },
    {
        "nombre": "Bogot치",
        "Poblaci칩n": "8,000,000 ",
        "Pa칤s": "Colombia",
    },
    {
        "nombre": "Nueva York",
        "Poblaci칩n": "8,500,000",
        "Pa칤s": "Estados Unidos",
    },
    {
        "nombre": "Los 츼ngeles ",
        "Poblaci칩n": "4,000,000",
        "Pa칤s": "Estados Unidos",
    },
]

df_lista_ciudades = pd.DataFrame(lista_ciudades)
st.subheader("**2. Lista de diccionarios:**")

st.write(
    """**Una lista de diccionarios es como una colecci칩n de filas, donde cada diccionario representa una fila con sus columnas etiquetadas.**
    Crea una lista que contenga varios diccionarios (por ejemplo, 3 o 4). Cada diccionario debe tener las claves "nombre", "poblaci칩n" y "pa칤s", 
    con valores correspondientes a ciudades diferentes."""
)

st.subheader("Informaci칩n de Ciudades")
st.dataframe(df_lista_ciudades)


if st.button("Ver c칩digo #2"):
    mostrar_codigo_dos = """lista_ciudades = [
    {
        "nombre": "Medell칤n",
        "Poblaci칩n": "2,500,000",
        "Pa칤s": "Colombia",
    },
    {
        "nombre": "Bogot치",
        "Poblaci칩n": "8,000,000 ",
        "Pa칤s": "Colombia",
    },
    {
        "nombre": "Nueva York",
        "Poblaci칩n": "8,500,000",
        "Pa칤s": "Estados Unidos",
    },
    {
        "nombre": "Los 츼ngeles ",
        "Poblaci칩n": "4,000,000",
        "Pa칤s": "Estados Unidos",
    },
]
df_lista_ciudades = pd.DataFrame(lista_ciudades)
st.dataframe(df_lista_ciudades)
"""
    st.code(mostrar_codigo_dos, language="python")


# 3. listas de listas

productos = [
    ["Pantal칩nes", "$100.000", 15],
    ["Vestidos", "$80.000", 50],
    ["Zapatos", "$150.000", 80],
    ["Camisas", "$50.000", 30],
]

columnas = ["Producto", "Precio", "Cantidad en Stock"]
df_productos = pd.DataFrame(productos, columns=columnas)


st.subheader("**3. Lista de listas:**")

st.write(
    """**Una lista de listas representa datos en forma de tabla, donde cada sublista es una fila, pero necesitas definir los nombres de las columnas por separado.**
    Crea una lista que contenga sublistas (por ejemplo, 3 o 4 filas). Cada sublista debe tener tres elementos: nombre del producto, precio y cantidad en stock
    (usa datos inventados)."""
)

st.subheader("Productos en Inventario")
st.dataframe(df_productos)

if st.button("Ver c칩digo #3"):
    mostrar_codigo_tres = """productos = [
    ["Pantal칩nes", "$100.000", 15],
    ["Vestidos", "$80.000", 50],
    ["Zapatos", "$150.000", 80],
    ["Camisas", "$50.000", 30],
]

columnas = ["Producto", "Precio", "Cantidad en Stock"]
]
df_productos = pd.DataFrame(productos, columns=columnas)
st.dataframe(df_productos)
"""
    st.code(mostrar_codigo_tres, language="python")


# 4. series

st.subheader("**4. Series:**")

st.write(
    """**Las Series son como columnas individuales en Pandas, y puedes combinarlas para formar un DataFrame.**
   Crea tres Series separadas: una con nombres de personas, otra con sus edades y otra con sus ciudades 
   (aseg칰rate de que tengan la misma cantidad de elementos, por ejemplo, 4 personas)."""
)

nombres = pd.Series(
    [
        "Lucas",
        "Mario",
        "Sara",
        "Carolina",
        "John",
    ]
)
edades = pd.Series([18, 20, 23, 30, 40])
ciudades = pd.Series(["Medell칤n", "Bogot치", "Cali", "Armenia", "Manizales"])


series_combinadas = {
    "Nombres": nombres,
    "edades": edades,
    "ciudades": ciudades,
}
df_datos_personas = pd.DataFrame(series_combinadas)
st.subheader("Datos de Personas")
st.dataframe(df_datos_personas)


if st.button("Ver c칩digo #4"):
    mostrar_codigo_series = """nombres = pd.Series(
    [
        "Lucas",
        "Mario",
        "Sara",
        "Carolina",
        "John",
    ]
)
edades = pd.Series([18, 20, 23, 30, 40])
ciudades = pd.Series(["Medell칤n", "Bogot치", "Cali", "Armenia", "Manizales"])


series_combinadas = {
    "Nombres": nombres,
    "edades": edades,
    "ciudades": ciudades,
}
df_datos_personas = pd.DataFrame(series_combinadas)
st.dataframe(df_datos_personas)"""
    st.code(mostrar_codigo_series, language="python")


# 5. Archivo Excel (local)

st.subheader("**5. Archivo Excel (local):**")

st.write(
    """Crea un archivo Excel llamado data.xlsx con columnas como "producto", "precio" y "stock" (por ejemplo, 3 filas). Gu치rdalo en tu proyecto.
En tu script, usa Pandas para leer el archivo Excel (pista: necesitas una funci칩n espec칤fica de Pandas y tal vez la biblioteca openpyxl instalada).
En Streamlit, agrega un texto como "Datos desde Excel" y muestra el DataFrame con st.dataframe()."""
)

st.subheader("Datos desde Excel")
df_xlsx = pd.read_excel("pages/static/dataset/data.xlsx")
st.dataframe(df_xlsx)

if st.button("Ver c칩digo #5"):
    mostrar_codigo_excel = """
    df_xlsx = pd.read_excel("pages/static/dataset/data.xlsx")
    st.dataframe(df_xlsx)"""
    st.code(mostrar_codigo_excel, language="python")


# 6. Archivo JSON
st.subheader("**6. Archivo JSON:**")

st.write(
    """En un editor de texto, crea un archivo data.json con una lista de objetos (por ejemplo, 3 usuarios con "nombre" y "correo"). Gu치rdalo en tu proyecto.
Usa Pandas para leer el archivo JSON y convertirlo en un DataFrame (pista: hay una funci칩n read_json).
En Streamlit, escribe "Datos de Usuarios desde JSON" y muestra el DataFrame con st.dataframe()."""
)

df_json = pd.read_json("pages/static/dataset/data.json")
st.dataframe(df_json)

if st.button("Ver c칩digo #6"):
    mostrar_codigo_excel = """
    df_json = pd.read_json("pages/static/dataset/data.json")
    st.dataframe(df_json)"""
    st.code(mostrar_codigo_excel, language="python")


# 7. Base de datos SQLite
st.subheader("**7. Base de datos SQLite:**")

st.write(
    """Importa la biblioteca sqlite3, crea una conexi칩n a una base de datos (por ejemplo, estudiantes.db), y define una tabla con columnas como "nombre" y "calificaci칩n". Inserta al menos 3 filas de datos inventados.
Usa Pandas para ejecutar una consulta SQL (como "SELECT * FROM tabla") y cargar los resultados en un DataFrame (pista: busca read_sql).
En Streamlit, escribe "Datos desde SQLite" y muestra el DataFrame con st.dataframe()."""
)

# p3ndiente


# 8. Array de NumPy

st.subheader("**8. Array de NumPy:**")

st.write(
    """Importa NumPy y crea un array bidimensional (por ejemplo, 3 filas y 3 columnas) con datos num칠ricos o mixtos.
Convierte este array en un DataFrame con Pandas, asignando nombres a las columnas si lo deseas.
En Streamlit, agrega "Datos desde NumPy" y muestra el DataFrame con st.dataframe()."""
)

array_bidimencional = np.array(
    [[1, 20, "Colombia"], [2, 50, "Mexico"], [3, 80, "Peru"]]
)

st.subheader("Datos desde NumPy")
df_array = pd.DataFrame(array_bidimencional, columns=["id", "edad", "pais"])
st.dataframe(df_array)

if st.button("Ver c칩digo #8"):
    mostrar_codigo_array = """
array_bidimencional = np.array(
    [[1, 20, "Colombia"], [2, 50, "Mexico"], [3, 80, "Peru"]]
)

st.subheader("Datos desde NumPy")
df_array = pd.DataFrame(array_bidimencional, columns=["id", "edad", "pais"])
st.dataframe(df_array)
"""
    st.code(mostrar_codigo_array, language="python")


# 9. Firebase

st.subheader("**9. Firebase:**")

st.write(
    """Configura un proyecto en Firebase, crea una colecci칩n con datos (por ejemplo, "usuarios" con "nombre" y "edad"), e instala firebase-admin.
Usa la biblioteca para recuperar los documentos de la colecci칩n y convi칠rtelos en un DataFrame con Pandas.
En Streamlit, escribe "Datos desde Firebase" y muestra el DataFrame con st.dataframe()."""
)


# 10. MongoDB
st.subheader("**10. MongoDB:**")

st.write(
    """Crea una base de datos y una colecci칩n en MongoDB, inserta datos (por ejemplo, 3 documentos con "nombre" y "ciudad"), e instala pymongo.
Conecta tu script a MongoDB, recupera los documentos y convi칠rtelos en un DataFrame con Pandas.
En Streamlit, escribe "Datos desde MongoDB" y muestra el DataFrame con st.dataframe()."""
)
